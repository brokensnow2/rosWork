obstacle_range: 5.0  # 障碍物探测的最大范围（单位：米），超过此范围的障碍物不会被记录到代价地图中
raytrace_range: 5.5  # 光线跟踪的最大范围（单位：米），用于清理障碍物或标记空闲区域

# footprint: [[-0.105, -0.105], [-0.105, 0.105], [0.041, 0.105], [0.041, -0.105]]  
# 机器人轮廓的多边形表示，顶点坐标相对于机器人中心（此处定义为矩形）

robot_radius: 0.12  
# 以圆形表示机器人，半径为 0.105 米；不能与 footprint 同时启用

inflation_radius: 0.3  # 障碍物膨胀半径（单位：米），为障碍物周围增加缓冲区，避免机器人靠得太近
cost_scaling_factor: 3.0  # 控制膨胀区域代价的衰减速率，值越大衰减越快（代价更集中在障碍物附近）

map_type: costmap  # 地图类型，此处为代价地图（costmap），每个栅格存储代价值
observation_sources: scan  # 定义传感器数据来源列表，用于检测障碍物（此处仅使用 scan）

scan: {  # 配置传感器 scan 的具体参数
  sensor_frame: laser,  # 指定传感器所在的坐标系，一般为传感器的物理安装位置
  data_type: LaserScan,  # 传感器数据类型，此处为激光雷达扫描数据
  topic: scan,  # 传感器数据的 ROS 话题名称
  marking: true,  # 传感器是否用于标记障碍物（将障碍物加入代价地图）
  clearing: true   # 传感器是否用于清理空闲区域（移除不再存在的障碍物）
}
